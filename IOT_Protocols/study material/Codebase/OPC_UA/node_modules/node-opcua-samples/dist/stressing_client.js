"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
// tslint:disable:no-console
const node_opcua_1 = require("node-opcua");
const endpointUrl = "opc.tcp://localhost:26543";
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        let counter = 1;
        while (true) {
            const client = node_opcua_1.OPCUAClient.create({ endpointMustExist: false });
            client.on("backoff", (retryCount, delay) => console.log("    backoff", retryCount, delay));
            try {
                yield client.connect(endpointUrl);
                const session = yield client.createSession();
                yield session.close();
                yield client.disconnect();
            }
            catch (err) {
                if (err instanceof Error) {
                    console.log("err", err.message);
                }
            }
            console.log(" Connected = ", counter++);
        }
    });
}
main();
//# sourceMappingURL=stressing_client.js.map